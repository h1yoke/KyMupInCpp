#!/bin/bash

if [[ $# == 0 ]]; then
    echo -e "Скрипт, облегчающий компиляцию файлов, использующих библиотеку KyMupInC++.\nДля большей информации используйте флаг \"-h\""
    exit 0
fi

if [[ $# == 1 && $1 == "-h" ]]; then
    bb="\033[1m"
    be="\033[0m"

    echo "Скрипт, облегчающий компиляцию файлов, использующих библиотеку KyMupInC++."
    echo "Использует компилятор \"clang++\". При вызове без флагов скрипт скомпилирует и"
    echo "запустит переданный файл, используя в качестве пути к системной библиотеке \"../source\""

    echo -e "\n"$bb"Список доступных флагов:"$be"\n"
    echo -e "    -b             скрипт не запускает файл, полученный после компиляции\n"
    echo -e "    -h             вызов описания скрипта\n"
    echo -e "    -lib [путь]    скрипт использует путь в качестве системной библиотеки\n"

    echo -e $bb"Примеры использования:"$be"\n"
    echo -e "    bash "$0" -lib ../source пример_ввода.кусь\n"
    echo "    скомпилировать и запустить файл \"пример_ввода.кусь\", используя"
    echo "    в качестве системной библиотеки \"../source\""
    exit 0
fi


run=1
lpath="../source"

arg=1
while [[ $arg -lt $# ]]; do
    case ${!arg} in
    -b)
        let arg=arg+1
        run=0
    ;;
    -lib)
        if [[ $(($# - arg)) -lt 2 ]]; then
            echo "Неправильное использование флага \"-lib\"!"
            exit 1
        fi

        let arg=arg+1
        lpath=${!arg}
        let arg=arg+1
    ;;
    *)
        echo "Были переданы неправильные аргументы. Вызовите скрипт с флагом \"-h\""
        echo "для получения полного списка флагов и дополнительной информации."
        exit 1
    ;;
  esac
done

fpath=${!arg}

# TODO: remove UUID generator dependency
temp=$(uuidgen).cpp
cp $fpath $temp &> /dev/null

clang++ -isystem $lpath $temp
rm $temp
[ $run -ne 0 ] && ./a.out
