// 'водолей' library header
#pragma once

/* КуМир library constant */
#ifdef __КуМир

/* 'водолей module' */
#define водолей namespace std;

/* Swap 2 arguments template function.
 * ARGUMENTS:
 *   - arguments to swap:
 *       type &A, &B;
 * RETURNS: None.
 */
template<class type>
  __inline void __Ку_Swap( type &A, type &B )
  {
    type tmp = A;

    A = B;
    B = tmp;
  } /* End of '__Ку_Swap' function */

/* Template swap macro */
#define обменяй(Один, Два) __Ку_Swap(Один, Два)

/* Compare 2 arguments template function.
 * ARGUMENTS:
 *   - arguments to compare:
 *       const type1 &A,
 *       cosnt type2 &B;
 * RETURNS:
 * (int) TRUE if equal, FALSE otherwise.
 */
template<class type1, class type2>
  __inline int __Ку_Cmp( const type1 &A, const type2 &B )
  {
    return A == B;
  } /* End of '__Ку_Cmp' function */

/* Template compare macro */
#define сравни(Один, Два) __Ку_Cmp(Один, Два)

#endif /* __КуМир */

/* END OF 'КуВодолей' FILE */
